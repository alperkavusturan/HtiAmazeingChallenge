/* 
 * A-maze-ing API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PlayerInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class PlayerInfoTests
    {
        // TODO uncomment below to declare an instance variable for PlayerInfo
        //private PlayerInfo instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of PlayerInfo
            //instance = new PlayerInfo();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PlayerInfo
        /// </summary>
        [Test]
        public void PlayerInfoInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" PlayerInfo
            //Assert.IsInstanceOfType<PlayerInfo> (instance, "variable 'instance' is a PlayerInfo");
        }


        /// <summary>
        /// Test the property 'PlayerId'
        /// </summary>
        [Test]
        public void PlayerIdTest()
        {
            // TODO unit test for the property 'PlayerId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'IsInPlaythrough'
        /// </summary>
        [Test]
        public void IsInPlaythroughTest()
        {
            // TODO unit test for the property 'IsInPlaythrough'
        }
        /// <summary>
        /// Test the property 'Maze'
        /// </summary>
        [Test]
        public void MazeTest()
        {
            // TODO unit test for the property 'Maze'
        }
        /// <summary>
        /// Test the property 'HasFoundEasterEgg'
        /// </summary>
        [Test]
        public void HasFoundEasterEggTest()
        {
            // TODO unit test for the property 'HasFoundEasterEgg'
        }
        /// <summary>
        /// Test the property 'MazeScoreInHand'
        /// </summary>
        [Test]
        public void MazeScoreInHandTest()
        {
            // TODO unit test for the property 'MazeScoreInHand'
        }
        /// <summary>
        /// Test the property 'MazeScoreInBag'
        /// </summary>
        [Test]
        public void MazeScoreInBagTest()
        {
            // TODO unit test for the property 'MazeScoreInBag'
        }
        /// <summary>
        /// Test the property 'PlayerScore'
        /// </summary>
        [Test]
        public void PlayerScoreTest()
        {
            // TODO unit test for the property 'PlayerScore'
        }

    }

}
