/* 
 * A-maze-ing API
 *
 * This document describes the API of the A-maze-ing evening server.    This API consists of three different endpoints, which are detailed below.   - To register yourself as a player use the Player endpoint.   - To get information about the available mazes and enter a specific maze use the Mazes endpoint.   - To navigate a maze use the Maze endpoint.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing MazesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MazesApiTests
    {
        private MazesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MazesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MazesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MazesApi
            //Assert.IsInstanceOfType(typeof(MazesApi), instance, "instance is a MazesApi");
        }

        
        /// <summary>
        /// Test All
        /// </summary>
        [Test]
        public void AllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.All();
            //Assert.IsInstanceOf<List<MazeInfo>> (response, "response is List<MazeInfo>");
        }
        
        /// <summary>
        /// Test Enter
        /// </summary>
        [Test]
        public void EnterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mazeName = null;
            //var response = instance.Enter(mazeName);
            //Assert.IsInstanceOf<PossibleActionsAndCurrentScore> (response, "response is PossibleActionsAndCurrentScore");
        }
        
    }

}
